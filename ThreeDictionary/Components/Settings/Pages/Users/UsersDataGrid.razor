@using ThreeDictionary.Domain.Entities
<MudDataGrid Items="@Items" Hover="true" Dense="true" Class="mt-3">
    <Columns>
        <PropertyColumn T="User" TProperty="string" Property="x => x.Id" Title="ID" />
        <PropertyColumn T="User" TProperty="string" Property="x => x.UserName" Title="User Name" />
        <PropertyColumn T="User" TProperty="string" Property="x => x.Email" Title="Email" />
        <PropertyColumn T="User" TProperty="bool" Property="x => x.EmailConfirmed" Title="Email Confirmed" />
        <TemplateColumn T="User" Title="Actions">
            <CellTemplate>
                <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small" OnClick="@(() => OnEditRequested.InvokeAsync(context.Item))" />
                <MudIconButton Icon="@Icons.Material.Filled.Delete"
                               Color="Color.Error"
                               Size="Size.Small"
                               Disabled="@(CurrentUserId == context.Item.Id)"
                               OnClick="@(() => OnDeleteRequested.InvokeAsync(context.Item))" />
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

@code {
    [Parameter] public List<User> Items { get; set; } = new();
    [Parameter] public EventCallback<User> OnEditRequested { get; set; }
    [Parameter] public EventCallback<User> OnDeleteRequested { get; set; }
    [Parameter] public string? CurrentUserId { get; set; }
}
