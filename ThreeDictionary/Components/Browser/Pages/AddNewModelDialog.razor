@using ThreeDictionary.Application.Services
@using ThreeDictionary.Domain.Entities
<MudDialog>
    <TitleContent>
        Add New Model
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="_name" Label="Name" Placeholder="e.g. My 3D Model" Immediate="true" Required="true"
                      RequiredError="Name is required" MaxLength="120" />
        <MudSelect T="int?" @bind-Value="_categoryId" Label="Category" Class="mt-2" Required="true" RequiredError="Category is required">
            @if (_loading)
            {
                <MudSelectItem Value="@((int?)null)">Loading...</MudSelectItem>
            }
            else
            {
                @foreach (var c in _categories.OrderBy(c => c.Name))
                {
                    <MudSelectItem Value="@((int?)c.Id)">@c.Name</MudSelectItem>
                }
            }
        </MudSelect>
        @if (!string.IsNullOrWhiteSpace(_error))
        {
            <MudText Color="Color.Error" Typo="Typo.caption">@_error</MudText>
        }
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text" OnClick="OnCancel">Cancel</MudButton>
        <MudButton Class="ml-2" Variant="Variant.Filled" Color="Color.Primary" Disabled="@_adding" OnClick="AddAsync">
            @if (_adding)
            {
                <MudProgressCircular Indeterminate Size="Size.Small" Class="mr-2" />
            }
            Add
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance? MudDialog { get; set; }
    [Inject] private LibraryCategoryService CategoryService { get; set; } = default!;
    [Inject] private LibraryModelService ModelService { get; set; } = default!;

    private string _name = string.Empty;
    private int? _categoryId;
    private bool _adding;
    private bool _loading = true;
    private string? _error;
    private List<LibraryCategory> _categories = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _categories = await CategoryService.GetCategoriesAsync();
            // Preselect first category if any
            _categoryId ??= _categories.FirstOrDefault()?.Id;
        }
        finally
        {
            _loading = false;
        }
    }

    private Task OnCancel()
    {
        MudDialog?.Cancel();
        return Task.CompletedTask;
    }

    private async Task AddAsync()
    {
        _error = null;
        var name = _name?.Trim() ?? string.Empty;
        if (string.IsNullOrWhiteSpace(name))
        {
            _error = "Name is required";
            return;
        }
        if (_categoryId is null)
        {
            _error = "Category is required";
            return;
        }

        try
        {
            _adding = true;
            await ModelService.CreateModelAsync(name, _categoryId.Value);
            MudDialog?.Close(DialogResult.Ok(true));
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
        finally
        {
            _adding = false;
        }
    }
}